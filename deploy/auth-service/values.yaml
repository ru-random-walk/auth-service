# Default values for bureaucracy-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  - name: SPRING_PROFILES_ACTIVE
    value: test
  - name: TZ
    value: Etc/UTC
  - name: KAFKA_BOOTSTRAP_SERVER
    value: kafka-cluster.kafka.svc.cluster.local:9092

secrets:
  - name: AUTH_DB_USERNAME
    secret_key: AUTH_DB_USERNAME
    secret_name: auth-secret

  - name: AUTH_DB_PASSWORD
    secret_key: AUTH_DB_PASSWORD
    secret_name: auth-secret

  - name: AUTH_ISSUER_URL
    secret_key: AUTH_ISSUER_URL
    secret_name: auth-secret

  - name: AUTH_JWT_PRIVATE_KEY
    secret_key: AUTH_JWT_PRIVATE_KEY
    secret_name: auth-secret

  - name: AUTH_JWT_PUBLIC_KEY
    secret_key: AUTH_JWT_PUBLIC_KEY
    secret_name: auth-secret

  - name: STORAGE_ENDPOINT
    secret_key: STORAGE_ENDPOINT
    secret_name: storage-secret

  - name: STORAGE_BUCKET_NAME
    secret_key: STORAGE_BUCKET_NAME
    secret_name: storage-secret

  - name: STORAGE_ACCESS_KEY
    secret_key: STORAGE_ACCESS_KEY
    secret_name: storage-secret

  - name: STORAGE_SECRET_KEY
    secret_key: STORAGE_SECRET_KEY
    secret_name: storage-secret

  - name: STORAGE_REGION
    secret_key: STORAGE_REGION
    secret_name: storage-secret


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false

resources:
  limits:
    cpu: 1000m
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 768Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  scaleUp:
    stabilizationWindowSeconds: 300
    pods:
      count: 1
      periodSeconds: 150
  scaleDown:
    stabilizationWindowSeconds: 600




# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
